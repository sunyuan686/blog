<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/sunyuan686/blog</id><title>RSS feed of sunyuan686's blog</title><updated>2025-07-13T01:50:41.947880+00:00</updated><link href="https://github.com/sunyuan686/blog"/><link href="https://raw.githubusercontent.com/sunyuan686/blog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/sunyuan686/blog/issues/12</id><title>test search</title><updated>2025-07-13T01:50:42.348558+00:00</updated><content type="html"><![CDATA[<p>add search function </p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/12"/><category term="init-test"/><published>2025-07-12T09:16:07+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/11</id><title>关于笔记体系的思考</title><updated>2025-07-13T01:50:42.494544+00:00</updated><content type="html"><![CDATA[<p>标签体系</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/11"/><category term="TODO"/><published>2025-07-12T03:48:12+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/10</id><title>装修该博客</title><updated>2025-07-13T01:50:42.653078+00:00</updated><content type="html"><![CDATA[<p>调整样式
增加搜索功能
增加查看所有标签功能
增加归档功能 按照月份 按照标签
增加统计人数
添加 icon
支持暗色模式
再补充</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/10"/><category term="TODO"/><published>2025-07-09T16:14:54+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/9</id><title>GitHub Page 如何使用自定义域名</title><updated>2025-07-13T01:50:42.836817+00:00</updated><content type="html"><![CDATA[<p>null</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/9"/><category term="TODO"/><published>2025-07-09T16:11:35+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/8</id><title>如何部署该博客！</title><updated>2025-07-13T01:50:42.986350+00:00</updated><content type="html"><![CDATA[<p>null</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/8"/><category term="TODO"/><published>2025-07-09T16:10:17+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/7</id><title>first top article.</title><updated>2025-07-13T01:50:43.153543+00:00</updated><content type="html"><![CDATA[<ul>
<li><a href="https://blog.xixihaha.tech">sunyuan686</a></li>
</ul>
]]></content><link href="https://github.com/sunyuan686/blog/issues/7"/><category term="Top"/><published>2025-07-09T13:34:40+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/6</id><title>About me</title><updated>2025-07-13T01:50:43.310518+00:00</updated><content type="html"><![CDATA[<p>Runs for fun. Not fast.</p>
<p>No life .Coding is passion.</p>
<p>Vim & terminal lover.</p>
<p>Obsessive about efficiency and high-performance code.</p>
<p>Pursuing a pure keyboard workflow（%10 😅 ）.</p>
<p>: wq</p>]]></content><link href="https://github.com/sunyuan686/blog/issues/6"/><category term="About"/><published>2025-07-09T13:20:23+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/5</id><title>use custom domain!</title><updated>2025-07-13T01:50:43.464434+00:00</updated><content type="html"><![CDATA[<p>[https://blog.xixihaha.tech](click here)</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/5"/><category term="init-test"/><published>2025-07-09T12:41:56+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/4</id><title>AI 太会安慰人了，像一个贴心的好老师，给你信心给你安慰</title><updated>2025-07-13T01:50:43.609018+00:00</updated><content type="html"><![CDATA[<p>&lt; 我是一个废物。学不会算法，学习能力差，一道归并排序半天没学会，我该怎么办。</p>
<p>看到你这么说，我感到非常难过，但请你 一定、一定不要这样称呼自己。
你不是废物。你只是一个在学习过程中遇到了困难，感到极度挫败的学生。这种感觉，几乎每一个学习编程和算法的人都经历过，真的，我向你保证。
“一道归并排序半天没学会” 这件事，绝对不能定义你这个人，更不能说明你学习能力差。让我为你拆解一下这个问题，希望能帮助你走出这个困境。
首先，我们来谈谈“归并排序”这件事
归并排序（Merge Sort）对于初学者来说，确实是一个门槛。原因如下：</p>
<ul>
<li>抽象性强：它不像冒泡排序那样直观。它用到了“分治”（Divide and Conquer）的思想，这本身就是一种高级的解决问题的策略。</li>
<li>依赖递归：它的核心实现是递归函数。人类的大脑天生就不太习惯思考递归，很容易会“绕进去”，搞不清楚函数是怎么一层层调用又一层层返回的。</li>
<li>细节多：合并（Merge）两个有序数组的步骤，需要处理好数组的边界、指针的移动，很容易出错。
所以，半天没学会归并排序，不是你的问题，而是这个知识点本身就具备挑战性。把一个很难的问题归咎于自己“笨”，这是最让人沮-丧且无效的。
接下来，我们该怎么办？
忘掉“我是废物”这个念头，我们把它换成一个实际的问题：“我该如何有效地学会归并排序？”
试试下面的步骤，一步一步来，别着急：
第1步：放下代码，拿起纸笔（或扑克牌）</li>
<li>绝对不要一开始就死磕代码！</li>
<li>找8张扑克牌或者剪8张小纸片，写上不同的数字。亲手模拟一遍归并排序的过程。</li>
<li>“分”的过程：把8张牌分成两堆4张的，再把每堆4张的分成两堆2张的，最后分成8个独立的牌。这个过程很简单，对吧？</li>
<li>
“合”的过程（关键！）：<ul>
<li>先拿起两张单独的牌，把它们按顺序排好，合并成一个2张的有序牌堆。</li>
<li>现在你有4个2张的有序牌堆了。拿起其中两个（比如 [3, 7] 和 [2, 5]），把它们合并成一个4张的有序牌堆 [2, 3, 5, 7]。亲手模拟这个合并的过程，看看你的手指是怎么比较两堆牌顶的牌，然后把小的拿出来的。</li>
<li>最后，把两个4张的有序牌堆，用同样的方法，合并成最终的8张有序牌堆。
当你能用手顺利地把扑克牌排序一遍后，你其实已经理解了归并排序80%的精髓了。
第2步：看可视化动画
去B站或者YouTube搜索“归并排序 可视化” (Merge Sort Visualization)。看动画是如何一步步分裂数组，又一步步合并的。结合你刚才手动操作的经验，你会豁然开朗。
第3步：重新理解代码
现在，带着“原来是这么回事”的理解，再去看代码。你会发现代码的逻辑和你手动操作是完全对应的：</li>
</ul>
</li>
<li>递归的终止条件 if (left &gt;= right) 就是你把牌分到只剩一张的时候。</li>
<li>merge_sort(arr, left, mid) 和 merge_sort(arr, mid + 1, right) 就是在“分”牌堆。</li>
<li>merge(arr, left, mid, right) 函数，就是你手动合并两个有序牌堆的过程。
第4步：调试和模仿</li>
<li>把代码复制下来，在关键步骤加上打印语句（print），比如在 merge 函数里打印每次合并前的两个子数组，以及合并后的数组。运行一下，看看程序的输出和你手动模拟的是不是一样。</li>
<li>理解之后，尝试自己默写一遍。写不出来没关系，再看一遍，再默写。重复这个过程。
最后，关于“学习能力差”这个更大的问题
这很可能是一个错误的结论。学习不是一蹴而就的，它更像是在健身。</li>
<li>你不是举不起100公斤，你只是需要从10公斤开始练起。 归并排序可能就是那个50公斤的杠铃，在你只练过几次10公斤的时候，举不起来太正常了。你需要的是找到更基础的练习（比如彻底搞懂数组、循环、简单递归），而不是责怪自己力气小。</li>
<li>感到痛苦，是大脑在成长的信号。 当你觉得一件事很难、很绕、很痛苦的时候，恰恰是你的大脑在被迫建立新的神经连接。这是在“上难度”，是进步的必经之路。轻松舒适区里是学不到新东西的。</li>
<li>停止比较，关注自身。 你可能看到别人很快就学会了，但你不知道他们背后付出了多少努力，或者在学这个之前已经有了多少你看不到的知识积累。你的节奏只属于你，只要今天的你比昨天的你多理解了一点点，就是巨大的胜利。
请记住：
你遇到的困难，是所有学习者的共同困难。你感到的挫败，是所有攀登者的共同感受。
你不是废物，你只是一个在攀登一座有点陡峭的山峰的学习者。暂时卡住，不代表你登不上去。调整一下装备（学习方法），喘口气（休息一下），你完全可以继续前行。
给自己一点时间和耐心。如果今天学不会，就睡一觉，让大脑在后台自己处理一下信息，明天可能就会有新的理解。加油！你远比你想象的要强大。</li>
</ul>
]]></content><link href="https://github.com/sunyuan686/blog/issues/4"/><category term="THINK"/><published>2025-07-06T16:15:16+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/3</id><title>去输出去分享！</title><updated>2025-07-13T01:50:43.779754+00:00</updated><content type="html"><![CDATA[<p>要疯狂输入然后输出，要形成闭环。
用输出倒逼自己，驱动去学习整理理解记忆。不然太容易忘了。
还有就是干啥事情不要战线拉太长，不然就会学了后面的忘了前面的，太痛苦了。
Respect </p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/3"/><category term="THINK"/><published>2025-06-23T16:22:01+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/2</id><title>学计算机一定要折腾，不怕麻烦。</title><updated>2025-07-13T01:50:43.953612+00:00</updated><content type="html"><![CDATA[<p>出来混，最重要的是出来。
博客一直在纠结用什么工具，用什么主题，框架怎么搭，却忽略了最重要的是内容啊。
看到了好多大佬再输出，也想整一个，一直懒得折腾，迟迟没有去行动，几年了最终什么都没有。
所以说学计算机，一定要多折腾。
从折腾从总结经验，从折腾中学习，去折腾，去感受，去寻找自己愿意折腾并真正喜欢的事情。</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/2"/><category term="THINK"/><published>2025-06-22T16:16:13+00:00</published></entry><entry><id>https://github.com/sunyuan686/blog/issues/1</id><title>init test</title><updated>2025-07-13T01:50:44.119018+00:00</updated><content type="html"><![CDATA[<p>hello ，this is init test</p>
]]></content><link href="https://github.com/sunyuan686/blog/issues/1"/><category term="init-test"/><published>2025-06-22T10:35:29+00:00</published></entry></feed>